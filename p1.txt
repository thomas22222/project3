    #include <iostream>
    #include <queue>
    
    using namespace std;

    enum Color{
        White, // Initital 0
        Blue, // Player One
        Red, // Player Two
        Black //Explosion
    };
    

    class Student{
    public:
        void makeMove(int Record[5][6], int Max[5][6], Color color[5][6], Color inputColor)
        {
            int adv[5][6]={0};
            for(int a=0;a<5;a++)
            {
                for(int b=0;b<6;b++)
                {
                    adv[a][b]=-31;
                }
            }

            int r[5][6];
            Color c[5][6];
            int rr[5][6];
            Color cc[5][6];
            int rrr[5][6];
            Color ccc[5][6];
            Color match ;
            if(inputColor==Red) match=Blue;
            else match=Red;
            for(int a=0;a<5;a++)
            {
                for(int b=0;b<6;b++)
                {
                    adv[a][b]=-151;
                }
            }
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    if(color[i][j]!=Black&&color[i][j]!=match)
                    {
                    copy(r,Record,c,color);
                    chest(i,j,r,Max,c,inputColor);
                    if(check(r,Max,c,match))
                    {
                        x=i;
                        y=j;
                        //cout<<endl<<2222<<endl;
                        return;
                    }
                    else 
                    {
                        int min=100;
                        for(int z=0;z<5;z++)
                        {
                            for(int h=0;h<6;h++)
                            {
                                if(color[z][h]!=Black&&color[z][h]!=inputColor)
                                {
                                copy(rr,r,cc,c);
                                chest(z,h,rr,Max,cc,match);
                                if(check(rr,Max,cc,inputColor))
                                {
                                    min=-100;
                                    z=5;
                                    break;
                                }
                                else 
                                {
                                    int sum=0;
                                    for(int k=0;k<5;k++)
                                    {
                                        for(int l=0;l<6;l++)
                                        {
                                            sum+=count(k,l,rr,Max,cc,inputColor);
                                        }
                                    }
                                    if(sum<min)min=sum;
                                }
                                }
                            }
                        }
                        adv[i][j]=min;

                    }
                    }

                }
            }

            cout<<"23423423wer"<<endl;
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    cout<<' '<<adv[i][j];
                }cout<<endl;
            }
            cout<<"23423423wer"<<endl;


            int big=adv[0][0];
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {   
                    if(color[i][j]!=Black&&color[i][j]!=match)
                    {
                    if(adv[i][j]>big)
                    {
                        x=i;
                        y=j;
                        big =adv[i][j];
                    }}
                }
            }

        }

        int count(int x,int y,int r[5][6],int m[5][6],Color c[5][6],Color rb)
        {   
            int sum=0;
            Color match;
            if(rb==Blue)match=Red;
            else match=Blue;

            if(c[x][y]==rb)
            {
                if(x-1>=0)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x-1][y]==m[x-1][y]-1&&c[x-1][y]==match)sum+=5;
                        if(r[x-1][y]==m[x-1][y]-1&&c[x-1][y]==rb   )sum-=5;
                    }
                    if(c[x-1][y]==Black)sum+=1;
                }
                else
                {
                    sum+=5;
                } 
                if(x+1<5)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x+1][y]==m[x+1][y]-1&&c[x+1][y]==match)sum+=5;
                        if(r[x+1][y]==m[x+1][y]-1&&c[x+1][y]==rb   )sum-=5;
                    }
                    if(c[x+1][y]==Black)sum+=1;
                }
                else
                {
                    sum+=5;
                }
                if(y-1>=0)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x][y-1]==m[x][y-1]-1&&c[x][y-1]==match)sum+=5;
                        if(r[x][y-1]==m[x][y-1]-1&&c[x][y-1]==rb   )sum-=5;
                    }
                    if(c[x][y-1]==Black)sum+=1;
                }
                else
                {
                    sum+=5;
                }
                if(y+1<6)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x][y+1]==m[x][y+1]-1&&c[x][y+1]==match)sum+=5;
                        if(r[x][y+1]==m[x][y+1]-1&&c[x][y+1]==rb   )sum-=5;
                    }
                    if(c[x][y+1]==Black)sum+=1;
                }
                else
                {
                    sum+=5;
                }
                if(r[x][y]==m[x][y]-1)sum+=15;
                if(r[x][y]==m[x][y]-2)sum+=10;
                if(r[x][y]==m[x][y]-3)sum+=5;
            }
            if(c[x][y]==match)
            {
                if(x-1>=0)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x-1][y]==m[x-1][y]-1&&c[x-1][y]==match)sum-=5;
                        if(r[x-1][y]==m[x-1][y]-1&&c[x-1][y]==rb   )sum+=5;
                    }
                    if(c[x-1][y]==Black)sum-=1;
                }
                else
                {
                    sum-=5;
                } 
                if(x+1<5)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x+1][y]==m[x+1][y]-1&&c[x+1][y]==match)sum-=5;
                        if(r[x+1][y]==m[x+1][y]-1&&c[x+1][y]==rb   )sum+=5;
                    }
                    if(c[x+1][y]==Black)sum-=1;
                }
                else
                {
                    sum-=5;
                }
                if(y-1>=0)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x][y-1]==m[x][y-1]-1&&c[x][y-1]==match)sum-=5;
                        if(r[x][y-1]==m[x][y-1]-1&&c[x][y-1]==rb   )sum+=5;
                    }
                    if(c[x][y-1]==Black)sum-=1;
                }
                else
                {
                    sum-=5;
                }
                if(y+1<6)
                {
                    if(r[x][y]==m[x][y]-1)
                    {
                        if(r[x][y+1]==m[x][y+1]-1&&c[x][y+1]==match)sum-=5;
                        if(r[x][y+1]==m[x][y+1]-1&&c[x][y+1]==rb   )sum+=5;
                    }
                    if(c[x][y+1]==Black)sum-=1;
                }
                else
                {
                    sum-=5;
                }
                if(r[x][y]==m[x][y]-1)sum-=15;
                if(r[x][y]==m[x][y]-2)sum-=10;
                if(r[x][y]==m[x][y]-3)sum-=5;
            }
            

            return sum ;
        }

        int check(int r[5][6],int m[5][6],Color c[5][6],Color rb)
        {
            int flag=1;
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    if(c[i][j]==White||c[i][j]==rb)
                    {
                        flag=0;
                        i=5;
                        break;
                    }
                }
            }
            return flag;
        }
        void copy(int a[5][6],int b[5][6],Color c[5][6],Color d[5][6])
        {
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    a[i][j]=b[i][j];
                    c[i][j]=d[i][j];
                }
            }
        }
        void chest(int x,int y,int Record[5][6], int Max[5][6], Color color[5][6], Color inputColor)
        {
            queue<int > bang;
            if(color[x][y]==inputColor||color[x][y]==White)
            {
            bang.push(x*10+y);
            while(!bang.empty())
            {   
                int i=bang.front()/10;
                int j=bang.front()%10;
                bang.pop();
                Record[i][j]++;
                if(color[i][j]!=Black)color[i][j]=inputColor;
                if(Record[i][j]==Max[i][j])
                {
                    color[i][j]=Black;
                    if(i-1>=0)bang.push((i-1)*10+j);
                    if(i+1<5)bang.push((i+1)*10+j);
                    if(j-1>=0)bang.push(i*10+j-1);
                    if(j+1<6)bang.push(i*10+j+1);
                }
            }
            }//enable same color
        }//chest()

        int getX(){
            return x;
        }
        int getY(){
            return y;
        }
    private:
        int x=0;
        int y=0;
    };


    

void pin(int Record[5][6],Color color[5][6])
{
    for(int i=0;i<5;i++)
    {
        for(int j=0;j<6;j++)
        {
                 if(color[i][j]==White)cout<<'.'<<"  ";
            else if(color[i][j]==Black)cout<<'.'<<"XX";
            else if(color[i][j]==Blue)cout<<'.'<<'B'<<Record[i][j];
            else if(color[i][j]==Red)cout<<'.'<<''<<Record[i][j];    
        }cout<<endl;
    }    cout<<endl;cout<<endl;
}


    int main()
    {
        int Max[5][6];
        int Record[5][6]={0};
        Color color[5][6]={White};//init is important
        for(int i=0;i<5;i++)
        {
            for(int j=0;j<6;j++)
            {
                if((i==0||i==4)&&(j==0||j==5))Max[i][j]=2;
                else if(i==0||j==0||i==4||j==5)Max[i][j]=3;
                else Max[i][j]=4;
            }
        }//init
        int x,y;
        pin (Record,color);
        Student npc;
        npc.chest(npc.getX(),npc.getY(), Record, Max,  color, Red);
        while(cin>>x>>y)
        {
            npc.chest(x-1,y-1, Record, Max,  color,Blue);
            pin (Record,color);
            npc.makeMove( Record, Max,  color, Red);
            npc.chest(npc.getX(),npc.getY(), Record, Max,  color, Red);
            pin (Record,color);
        }
        
    }