#include<iostream>
#include<queue>

using namespace std;

enum Color
{
    White,//init;
    Blue,//p1;
    Red,//p2;
    Black//explosion;
};

    class Student{
    public:
        void makeMove(int Record[5][6], int Max[5][6], Color color[5][6], Color inputColor){

            int point[5][6];

            int r[5][6];
            Color c[5][6];
            Color match;
            if(inputColor==Red) match=Blue;
            else match=Red;
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {   
                    if(color[i][j]==White||color[i][j]==inputColor)
                    {
                        copy(r,Record,c,color);
                        chest(i,j,r,Max,c,inputColor);
                        point[i][j]=count(r,Max,c,inputColor);
                        int flag=0;
                        for(int z=0;z<5;z++)
                        {
                            for(int h=0;h<6;h++)
                            {
                                 if(color[z][h]==match&&c[z][h]!=match)flag=100;
                            }
                        }
                        point[i][j]+=flag;
                    }
                    else
                    {
                        point[i][j]=-10000;
                    }
                }
            }
            int max=point[0][0];
            x=0;y=0;
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {   
                    if(point[i][j]>max)
                    {
                        max=point[i][j];
                        x=i;
                        y=j;
                    }
                }
            }
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {   
                    cout<<' '<<point[i][j];
                }cout<<endl;
            }
            

            
            



        }
        int count(int Record[5][6], int Max[5][6], Color color[5][6], Color inputColor)
        {
            int point=0;
            Color match;
            if(inputColor==Red) match=Blue;
            else match=Red;
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    if(color[i][j]==inputColor)
                    {
                        int flag=6;
                        int fat=4;
                        int fat2=2;
                        if(i-1>=0)
                        {
                            if(Max[i][j]-Record[i][j]>=Max[i-1][j]-Record[i-1][j]&&color[i-1][j]==match)flag=0;
                            if(color[i-1][j]==inputColor&&Record[i][j]==Max[i][j]-1&&Record[i-1][j]==Max[i-1][j]-1)fat=0;
                            if(color[i-1][j]==inputColor)fat2=0;
                        }
                        if(i+1<5)
                        {
                            if(Max[i][j]-Record[i][j]>=Max[i+1][j]-Record[i+1][j]&&color[i+1][j]==match)flag=0;
                            if(color[i+1][j]==inputColor&&Record[i][j]==Max[i][j]-1&&Record[i+1][j]==Max[i+1][j]-1)fat=0;
                            if(color[i+1][j]==inputColor)fat2=0;
                        }
                        if(j-1>=0)
                        {
                            if(Max[i][j]-Record[i][j]>=Max[i][j-1]-Record[i][j-1]&&color[i][j-1]==match)flag=0;
                            if(color[i][j-1]==inputColor&&Record[i][j]==Max[i][j]-1&&Record[i][j-1]==Max[i][j-1]-1)fat=0;
                            if(color[i][j-1]==inputColor)fat2=0;
                        }
                        if(j+1<6)
                        {
                            if(Max[i][j]-Record[i][j]>=Max[i][j+1]-Record[i][j+1]&&color[i][j+1]==match)flag=0;
                            if(color[i][j+1]==inputColor&&Record[i][j]==Max[i][j]-1&&Record[i][j+1]==Max[i][j+1]-1)fat=0;
                            if(color[i][j+1]==inputColor)fat2=0;
                        }
                        
                        point+=flag;
                        point+=fat;
                        point+=fat2;
                        if(Max[i][j]==2)point+=3;
                        if(Max[i][j]==3)point+=2;
                        if(Max[i][j]==4)point+=1;
                        if(Record[i][j]==Max[i][j]-1)point+=7;
                    }
                }
            }
            return point;
        }
        void copy(int a[5][6],int b[5][6],Color c[5][6],Color d[5][6])
        {
            for(int i=0;i<5;i++)
            {
                for(int j=0;j<6;j++)
                {
                    a[i][j]=b[i][j];
                    c[i][j]=d[i][j];
                }
            }
        }
        // Any Code You Want to Add
        void chest(int x,int y,int Record[5][6],int Max[5][6],Color color[5][6],Color rb)
        {
            queue<int>bang;
            if(color[x][y]==White||color[x][y]==rb)
            {
                bang.push(x*10+y);
                while(!bang.empty())
                {
                    int i=bang.front()/10;
                    int j=bang.front()%10;
                    bang.pop();
                    Record[i][j]++;
                    if(Record[i][j]==Max[i][j])
                    {
                        color[i][j]=Black;
                        if(i-1>=0)bang.push((i-1)*10+j);
                        if(i+1<5)bang.push((i+1)*10+j);
                        if(j-1>=0)bang.push(i*10+j-1);
                        if(j+1<6)bang.push(i*10+j+1);
                    }
                    if(color[i][j]!=Black)color[i][j]=rb;
                }
            }
        }
        int getX(){
            return x;
        }
        int getY(){
            return y;
        }
    private:
        int x;
        int y;
    };

void pin (int Record[5][6],Color color[5][6])
{
    cout<<endl;cout<<endl;
    for(int i=0;i<5;i++)
    {
        for(int j=0;j<6;j++)
        {   
            cout<<'.';
            if(color[i][j]==White)cout<<"  ";
            else if(color[i][j]==Blue)cout<<'B'<<Record[i][j];
            else if(color[i][j]==Red)cout<<'r'<<Record[i][j];
            else cout<<"XX";
        }cout<<endl;
    }
}

int main (void)
{   
    int Record[5][6]={0};
    int Max[5][6];
    Color color[5][6]={White};

    for(int i=0;i<5;i++)
    {
        for(int j=0;j<6;j++)
        {
            if((i==0||i==4)&&(j==0||j==5))Max[i][j]=2;
            else if(i==0||i==4||j==0||j==5)Max[i][j]=3;
            else Max[i][j]=4;
        }
    }//init
    int x,y;
    pin(Record,color);
    Student npc;
    while(cin>>x>>y)
    {
        npc.chest(x-1,y-1,Record,Max,color,Red);
        pin(Record,color);
        npc.makeMove(Record,Max,color,Blue);
        npc.chest(npc.getX(),npc.getY(),Record,Max,color,Blue);
        pin(Record,color);
    }

        return 0;
}